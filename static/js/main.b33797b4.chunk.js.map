{"version":3,"sources":["constants/routes.js","components/loader.js","helpers/protected-route.js","App.js","hooks/use-auth-listener.js","index.js","context/firebase.js","lib/firebase.js","context/user.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","ReactLoader","_jsx","Loader","type","color","height","width","className","ProtectedRoute","_ref","user","children","rest","Route","render","_ref2","location","React","cloneElement","Redirect","to","pathname","ROUTES","state","from","Login","lazy","SignUp","Dashboard","Profile","NotFound","App","setUser","useState","JSON","parse","localStorage","getItem","firebase","useContext","FirebaseContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","UserContext","Provider","value","Router","Suspense","fallback","_jsxs","Switch","path","component","loggedInUser","exact","ReactDOM","FieldValue","document","getElementById","createContext","require","config","Firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore"],"mappings":"uVAAA,0KAAO,MAAMA,EAAY,IACZC,EAAQ,SACRC,EAAU,WACVC,EAAU,eACVC,EAAY,Y,yMCFV,SAASC,IACtB,OACEC,cAACC,IAAM,CACLC,KAAK,WACLC,MAAM,YACNC,OAAQ,GACRC,MAAO,GACPC,UAAU,6BAGhB,C,4BCPe,SAASC,EAAcC,GAA+B,IAA9B,KAAEC,EAAI,SAAEC,KAAaC,GAAMH,EAChE,OACER,cAACY,IAAK,IACAD,EACJE,OAAQC,IAAmB,IAAlB,SAAEC,GAAUD,EACnB,OAAIL,EACKO,IAAMC,aAAaP,EAAU,CAAED,SAGnCA,EAWE,KATHT,cAACkB,IAAQ,CACPC,GAAI,CACFC,SAAUC,IACVC,MAAO,CAAEC,KAAMR,KAMZ,GAInB,CCpBA,MAAMS,EAAQC,gBAAK,IAAM,iCACnBC,EAASD,gBAAK,IAAM,gCACpBE,EAAYF,gBAAK,IAAM,6DACvBG,EAAUH,gBAAK,IAAM,6DACrBI,EAAWJ,gBAAK,IAAM,gCAEb,SAASK,IACtB,MAAM,KAAErB,GCbK,WACb,MAAOA,EAAMsB,GAAWC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,eAC3D,SAAEC,GAAaC,qBAAWC,KAkBhC,OAhBAC,qBAAU,KACR,MAAMC,EAAWJ,EAASK,OAAOC,oBAAoBC,IAC/CA,GAEFT,aAAaU,QAAQ,WAAYZ,KAAKa,UAAUF,IAChDb,EAAQa,KAGRT,aAAaY,WAAW,YACxBhB,EAAQ,MACV,IAGF,MAAO,IAAMU,GAAU,GACtB,CAACJ,IAEG,CAAE5B,OACX,CDRmBuC,GAEjB,OACEhD,cAACiD,IAAYC,SAAQ,CAACC,MAAO,CAAE1C,QAAOC,SACpCV,cAACoD,IAAM,CAAA1C,SACLV,cAACqD,WAAQ,CAACC,SAAUtD,cAACD,EAAW,IAAIW,SAClC6C,eAACC,IAAM,CAAA9C,SAAA,CACLV,cAACY,IAAK,CAAC6C,KAAMpC,IAAcqC,UAAWlC,IACtCxB,cAACY,IAAK,CAAC6C,KAAMpC,IAAgBqC,UAAWhC,IACxC1B,cAACY,IAAK,CAAC6C,KAAMpC,IAAiBqC,UAAWA,IAAM1D,cAAC4B,EAAO,CAAC+B,aAAclD,MACtET,cAACO,EAAc,CAACE,KAAMA,EAAMgD,KAAMpC,IAAkBuC,OAAK,EAAAlD,SACvDV,cAAC2B,EAAS,MAEZ3B,cAACY,IAAK,CAAC8C,UAAW7B,YAM9B,C,mBE5BAgC,IAAShD,OACPb,cAACuC,IAAgBW,SAAQ,CAACC,MAAO,CAAEd,aAAUyB,gBAAapD,SACxDV,cAAC8B,EAAG,MAENiC,SAASC,eAAe,Q,kCCX1B,WAEA,MAAMzB,EAAkB0B,wBAAc,MACvB1B,K,gICKf2B,EAAQ,KAAUC,SAElB,MAWM9B,EAAW+B,IAASC,cAXX,CACbC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,+CAMH,WAAET,GAAeM,IAASS,S,kCCtBhC,WAEA,MAAM5B,EAAcgB,wBAAc,MACnBhB,K","file":"static/js/main.b33797b4.chunk.js","sourcesContent":["export const DASHBOARD = '/';\r\nexport const LOGIN = '/login';\r\nexport const SIGN_UP = '/sign-up';\r\nexport const PROFILE = '/p/:username';\r\nexport const NOT_FOUND = '/not-found';\r\n","import Loader from 'react-loader-spinner';\r\n\r\nexport default function ReactLoader() {\r\n  return (\r\n    <Loader\r\n      type=\"TailSpin\"\r\n      color=\"#00000059\"\r\n      height={70}\r\n      width={70}\r\n      className=\"flex justify-center mt-12\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (user) {\r\n          return React.cloneElement(children, { user });\r\n        }\r\n\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: ROUTES.LOGIN,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return null;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  user: PropTypes.object,\r\n  children: PropTypes.object.isRequired\r\n};\r\n","import { lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ReactLoader from './components/loader';\r\nimport * as ROUTES from './constants/routes';\r\nimport UserContext from './context/user';\r\nimport useAuthListener from './hooks/use-auth-listener';\r\n\r\nimport ProtectedRoute from './helpers/protected-route';\r\n\r\nconst Login = lazy(() => import('./pages/login'));\r\nconst SignUp = lazy(() => import('./pages/sign-up'));\r\nconst Dashboard = lazy(() => import('./pages/dashboard'));\r\nconst Profile = lazy(() => import('./pages/profile'));\r\nconst NotFound = lazy(() => import('./pages/not-found'));\r\n\r\nexport default function App() {\r\n  const { user } = useAuthListener();\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user }}>\r\n      <Router>\r\n        <Suspense fallback={<ReactLoader />}>\r\n          <Switch>\r\n            <Route path={ROUTES.LOGIN} component={Login} />\r\n            <Route path={ROUTES.SIGN_UP} component={SignUp} />\r\n            <Route path={ROUTES.PROFILE}  component={() => <Profile loggedInUser={user} />} />\r\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\r\n              <Dashboard />\r\n            </ProtectedRoute>\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport FirebaseContext from '../context/firebase';\r\n\r\nexport default function useAuthListener() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // we have a user...therefore we can store the user in localstorage\r\n        localStorage.setItem('authUser', JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        // we don't have an authUser, therefore clear the localstorage\r\n        localStorage.removeItem('authUser');\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport FirebaseContext from './context/firebase';\r\nimport { firebase, FieldValue } from './lib/firebase';\r\nimport './styles/app.css';\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { createContext } from 'react';\r\n\r\nconst FirebaseContext = createContext(null);\r\nexport default FirebaseContext;\r\n","import Firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { seedDatabase } from '../seed';\r\n// import { configDotenv } from 'dotenv';\r\n\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n\r\n\r\nconst firebase = Firebase.initializeApp(config);\r\nconst { FieldValue } = Firebase.firestore;\r\n\r\n\r\n\r\nexport { firebase, FieldValue };\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext(null);\r\nexport default UserContext;\r\n"],"sourceRoot":""}